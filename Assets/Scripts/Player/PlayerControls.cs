//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.9.0
//     from Assets/Scripts/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine;

public partial class PlayerControl: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public PlayerControl()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""c98b152f-00e6-490a-a45c-d53c32e51d6f"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""9ce040bf-a202-4fc6-8be4-3617c86a590a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""cfd401ca-b8ef-4a63-b256-5fdda13ad5c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""226de27f-a9d5-4fe5-b1a5-6b795a7f4bba"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LightAttack"",
                    ""type"": ""Button"",
                    ""id"": ""17768109-0f30-4ac3-96d2-11c055b3d974"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyAttack"",
                    ""type"": ""Button"",
                    ""id"": ""fa00456e-277c-4095-b8ca-96927ed461b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RangedAttack"",
                    ""type"": ""Button"",
                    ""id"": ""a584097f-a995-4cf5-8f43-513c976c1321"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SupportCall"",
                    ""type"": ""Button"",
                    ""id"": ""c7d9f45a-8de7-4c1a-aa96-3edcc4023361"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BattleIncarnate"",
                    ""type"": ""Button"",
                    ""id"": ""d4a3b305-913e-4678-8b69-943e43f6ae17"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""ec6ab4b1-065d-4f7b-b96e-012d2dad8ee7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FiesSearch"",
                    ""type"": ""Button"",
                    ""id"": ""8a8308a7-5c71-421c-9a95-6480d126542a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""70aab60a-21f4-44a0-981f-26149b9e8b64"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""0186e0ec-2226-4e97-a2c2-6ffa2d489226"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LockCam"",
                    ""type"": ""Button"",
                    ""id"": ""92a37e0e-00c5-4494-b683-c439e105b163"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""32b5c85d-0d06-4c35-865f-05bc700fa11d"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""511f83c4-7346-4473-a756-54b94b926b19"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5fd95c50-128c-436a-a1df-d4632e5f8303"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e11eca1f-6c18-4d36-b8d5-1d4772863951"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cf2678eb-e7e2-4665-af7a-e6b42b4b8504"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ba47c828-fb15-41a1-b474-2a4626ea3558"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8d51aed7-7a49-467e-9b14-7d6d01a59cc6"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a50b203-d05f-4fa8-95c0-e2624d90aa09"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0ffb07fc-7ff5-44ff-9f84-b5ffcbf5a76b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4c827f2-5421-4dc0-bcf6-aa99c68a9ec1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c25f06a-e1c9-48db-b219-463813a41c9f"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SupportCall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d0e1da0-98f1-4efe-a0f2-70a0ffaf8c40"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SupportCall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27b9cf3c-5123-4a5c-9ad5-ee0c892a3303"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""884d5373-300a-400b-829e-c43d80cb3dbf"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""947f9e1a-cbf5-420b-a888-a00569600713"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BattleIncarnate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45b522a5-a81b-47ab-b866-2544613ab04e"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BattleIncarnate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2b144b0-8a92-4b2e-bbc1-a5e6e9b2ec87"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f1346bd-6d7c-4f37-baa8-6900460e290c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83dea05f-eea7-44fd-8dd4-c2dfb11fc123"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RangedAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0ff84cd-b744-44ab-ab21-a9ace8ebf4d5"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RangedAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""612a1dde-35d8-4d4d-bc61-b15d37f2d363"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21bf871a-bdaa-464e-8b2c-efdb52c959dc"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2f6757c-bc14-4d6c-8fd4-cc98b2f2f694"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FiesSearch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e11b9421-fb6e-4c7f-8e2f-746c9598c9ef"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FiesSearch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47c4dcc3-31b1-426c-b68d-00c258d53cb5"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e75ee1e-670c-4722-9ff3-b173fcb7ded7"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45da49f8-ace4-41ef-8254-d7d0579a6fb8"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42e189b1-0d8b-4b4a-b84d-da3c3a9410e3"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f36239f-3560-4c89-a11f-47b58b714bc6"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockCam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e89c125-fec2-41e7-a7b8-b77b1a83c154"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockCam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Rhythm"",
            ""id"": ""c17eaa09-7f14-4ed8-969c-e98f497df510"",
            ""actions"": [
                {
                    ""name"": ""LeftNote"",
                    ""type"": ""Button"",
                    ""id"": ""6b95d908-3c9b-42b3-b97e-1657ba9b4f64"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleNote"",
                    ""type"": ""Button"",
                    ""id"": ""3f3c0e1b-b6ab-445f-8712-43849bc1a813"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightNote"",
                    ""type"": ""Button"",
                    ""id"": ""1420d414-a5a6-4b63-a231-ec18851b54f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StartSong"",
                    ""type"": ""Button"",
                    ""id"": ""9a0c0527-c27b-4b95-b479-ef3c1cdb155a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""62ead573-c72d-46a7-9ccf-55a76a9b153c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftNote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07021064-4981-4cf9-8ded-da5659f7a1b5"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftNote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2acfad6c-2423-43ce-bf18-da152c9b0a25"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleNote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9529ce8f-d3d7-4107-af68-dd21c43386a9"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleNote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17a8fa3b-1612-466e-8cb3-cc6baf266764"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightNote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f625c4f-5200-485f-b911-fcce2749f081"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightNote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a752c6e-fd93-4291-a3b3-e81a07845225"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartSong"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b0da6d7-1bde-40e1-a82e-bb93e3dbbfb5"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartSong"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_LightAttack = m_Player.FindAction("LightAttack", throwIfNotFound: true);
        m_Player_HeavyAttack = m_Player.FindAction("HeavyAttack", throwIfNotFound: true);
        m_Player_RangedAttack = m_Player.FindAction("RangedAttack", throwIfNotFound: true);
        m_Player_SupportCall = m_Player.FindAction("SupportCall", throwIfNotFound: true);
        m_Player_BattleIncarnate = m_Player.FindAction("BattleIncarnate", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_FiesSearch = m_Player.FindAction("FiesSearch", throwIfNotFound: true);
        m_Player_Inventory = m_Player.FindAction("Inventory", throwIfNotFound: true);
        m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
        m_Player_LockCam = m_Player.FindAction("LockCam", throwIfNotFound: true);
        // Rhythm
        m_Rhythm = asset.FindActionMap("Rhythm", throwIfNotFound: true);
        m_Rhythm_LeftNote = m_Rhythm.FindAction("LeftNote", throwIfNotFound: true);
        m_Rhythm_MiddleNote = m_Rhythm.FindAction("MiddleNote", throwIfNotFound: true);
        m_Rhythm_RightNote = m_Rhythm.FindAction("RightNote", throwIfNotFound: true);
        m_Rhythm_StartSong = m_Rhythm.FindAction("StartSong", throwIfNotFound: true);
    }

    ~PlayerControl()
    {
        Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, PlayerControls.Player.Disable() has not been called.");
        Debug.Assert(!m_Rhythm.enabled, "This will cause a leak and performance issues, PlayerControls.Rhythm.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_LightAttack;
    private readonly InputAction m_Player_HeavyAttack;
    private readonly InputAction m_Player_RangedAttack;
    private readonly InputAction m_Player_SupportCall;
    private readonly InputAction m_Player_BattleIncarnate;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_FiesSearch;
    private readonly InputAction m_Player_Inventory;
    private readonly InputAction m_Player_Pause;
    private readonly InputAction m_Player_LockCam;
    public struct PlayerActions
    {
        private PlayerControl m_Wrapper;
        public PlayerActions(PlayerControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @LightAttack => m_Wrapper.m_Player_LightAttack;
        public InputAction @HeavyAttack => m_Wrapper.m_Player_HeavyAttack;
        public InputAction @RangedAttack => m_Wrapper.m_Player_RangedAttack;
        public InputAction @SupportCall => m_Wrapper.m_Player_SupportCall;
        public InputAction @BattleIncarnate => m_Wrapper.m_Player_BattleIncarnate;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @FiesSearch => m_Wrapper.m_Player_FiesSearch;
        public InputAction @Inventory => m_Wrapper.m_Player_Inventory;
        public InputAction @Pause => m_Wrapper.m_Player_Pause;
        public InputAction @LockCam => m_Wrapper.m_Player_LockCam;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @LightAttack.started += instance.OnLightAttack;
            @LightAttack.performed += instance.OnLightAttack;
            @LightAttack.canceled += instance.OnLightAttack;
            @HeavyAttack.started += instance.OnHeavyAttack;
            @HeavyAttack.performed += instance.OnHeavyAttack;
            @HeavyAttack.canceled += instance.OnHeavyAttack;
            @RangedAttack.started += instance.OnRangedAttack;
            @RangedAttack.performed += instance.OnRangedAttack;
            @RangedAttack.canceled += instance.OnRangedAttack;
            @SupportCall.started += instance.OnSupportCall;
            @SupportCall.performed += instance.OnSupportCall;
            @SupportCall.canceled += instance.OnSupportCall;
            @BattleIncarnate.started += instance.OnBattleIncarnate;
            @BattleIncarnate.performed += instance.OnBattleIncarnate;
            @BattleIncarnate.canceled += instance.OnBattleIncarnate;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @FiesSearch.started += instance.OnFiesSearch;
            @FiesSearch.performed += instance.OnFiesSearch;
            @FiesSearch.canceled += instance.OnFiesSearch;
            @Inventory.started += instance.OnInventory;
            @Inventory.performed += instance.OnInventory;
            @Inventory.canceled += instance.OnInventory;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @LockCam.started += instance.OnLockCam;
            @LockCam.performed += instance.OnLockCam;
            @LockCam.canceled += instance.OnLockCam;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @LightAttack.started -= instance.OnLightAttack;
            @LightAttack.performed -= instance.OnLightAttack;
            @LightAttack.canceled -= instance.OnLightAttack;
            @HeavyAttack.started -= instance.OnHeavyAttack;
            @HeavyAttack.performed -= instance.OnHeavyAttack;
            @HeavyAttack.canceled -= instance.OnHeavyAttack;
            @RangedAttack.started -= instance.OnRangedAttack;
            @RangedAttack.performed -= instance.OnRangedAttack;
            @RangedAttack.canceled -= instance.OnRangedAttack;
            @SupportCall.started -= instance.OnSupportCall;
            @SupportCall.performed -= instance.OnSupportCall;
            @SupportCall.canceled -= instance.OnSupportCall;
            @BattleIncarnate.started -= instance.OnBattleIncarnate;
            @BattleIncarnate.performed -= instance.OnBattleIncarnate;
            @BattleIncarnate.canceled -= instance.OnBattleIncarnate;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @FiesSearch.started -= instance.OnFiesSearch;
            @FiesSearch.performed -= instance.OnFiesSearch;
            @FiesSearch.canceled -= instance.OnFiesSearch;
            @Inventory.started -= instance.OnInventory;
            @Inventory.performed -= instance.OnInventory;
            @Inventory.canceled -= instance.OnInventory;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @LockCam.started -= instance.OnLockCam;
            @LockCam.performed -= instance.OnLockCam;
            @LockCam.canceled -= instance.OnLockCam;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Rhythm
    private readonly InputActionMap m_Rhythm;
    private List<IRhythmActions> m_RhythmActionsCallbackInterfaces = new List<IRhythmActions>();
    private readonly InputAction m_Rhythm_LeftNote;
    private readonly InputAction m_Rhythm_MiddleNote;
    private readonly InputAction m_Rhythm_RightNote;
    private readonly InputAction m_Rhythm_StartSong;
    public struct RhythmActions
    {
        private PlayerControl m_Wrapper;
        public RhythmActions(PlayerControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftNote => m_Wrapper.m_Rhythm_LeftNote;
        public InputAction @MiddleNote => m_Wrapper.m_Rhythm_MiddleNote;
        public InputAction @RightNote => m_Wrapper.m_Rhythm_RightNote;
        public InputAction @StartSong => m_Wrapper.m_Rhythm_StartSong;
        public InputActionMap Get() { return m_Wrapper.m_Rhythm; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RhythmActions set) { return set.Get(); }
        public void AddCallbacks(IRhythmActions instance)
        {
            if (instance == null || m_Wrapper.m_RhythmActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RhythmActionsCallbackInterfaces.Add(instance);
            @LeftNote.started += instance.OnLeftNote;
            @LeftNote.performed += instance.OnLeftNote;
            @LeftNote.canceled += instance.OnLeftNote;
            @MiddleNote.started += instance.OnMiddleNote;
            @MiddleNote.performed += instance.OnMiddleNote;
            @MiddleNote.canceled += instance.OnMiddleNote;
            @RightNote.started += instance.OnRightNote;
            @RightNote.performed += instance.OnRightNote;
            @RightNote.canceled += instance.OnRightNote;
            @StartSong.started += instance.OnStartSong;
            @StartSong.performed += instance.OnStartSong;
            @StartSong.canceled += instance.OnStartSong;
        }

        private void UnregisterCallbacks(IRhythmActions instance)
        {
            @LeftNote.started -= instance.OnLeftNote;
            @LeftNote.performed -= instance.OnLeftNote;
            @LeftNote.canceled -= instance.OnLeftNote;
            @MiddleNote.started -= instance.OnMiddleNote;
            @MiddleNote.performed -= instance.OnMiddleNote;
            @MiddleNote.canceled -= instance.OnMiddleNote;
            @RightNote.started -= instance.OnRightNote;
            @RightNote.performed -= instance.OnRightNote;
            @RightNote.canceled -= instance.OnRightNote;
            @StartSong.started -= instance.OnStartSong;
            @StartSong.performed -= instance.OnStartSong;
            @StartSong.canceled -= instance.OnStartSong;
        }

        public void RemoveCallbacks(IRhythmActions instance)
        {
            if (m_Wrapper.m_RhythmActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRhythmActions instance)
        {
            foreach (var item in m_Wrapper.m_RhythmActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RhythmActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RhythmActions @Rhythm => new RhythmActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnLightAttack(InputAction.CallbackContext context);
        void OnHeavyAttack(InputAction.CallbackContext context);
        void OnRangedAttack(InputAction.CallbackContext context);
        void OnSupportCall(InputAction.CallbackContext context);
        void OnBattleIncarnate(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnFiesSearch(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnLockCam(InputAction.CallbackContext context);
    }
    public interface IRhythmActions
    {
        void OnLeftNote(InputAction.CallbackContext context);
        void OnMiddleNote(InputAction.CallbackContext context);
        void OnRightNote(InputAction.CallbackContext context);
        void OnStartSong(InputAction.CallbackContext context);
    }
}
